[project]
name = "uvcombine"
dynamic = [
    "version"
]
description = "Combination of high- and low-resoluation radio astronomical data."
readme = "README.rst"
authors = [
  { name = "Eric Koch", email = "koch.eric.w@gmail.com" },
  { name = "Adam Ginsburg"},
]
license = "BSD-3-Clause"
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "astropy>=6.1",
  "numpy>=1.8",
  "packaging>=19",
  "setuptools>=62.3.3",
  "matplotlib>=3.5",
  'reproject>=0.13',
  'spectral-cube>=0.4.0',
  'radio-beam>=0.3.5',
  'tqdm',
]


[project.optional-dependencies]
docs = [
  "sphinx-astropy",
]
test = [
  "pytest>=5",
  "pytest-astropy>=0.10",
  "pytest-cov>=3",
  "scikit-image>=0.24",
  ]
dev = [
    "numpy>=0.0.dev0",
    "astropy>=0.0.dev0",
    "spectral-cube>=0.0.dev0",
    "radio-beam>=0.0.dev0",
]

[project.urls]
homepage = "https://uvcombine.readthedocs.org"
documentation = "https://uvcombine.readthedocs.org"
repository = "https://github.com/radio-astro-tools/uvcombine"

[build-system]
build-backend = "setuptools.build_meta"
requires = [
            "setuptools>=61.2",
            "setuptools_scm",
]

[tool.setuptools]
zip-safe = false
include-package-data = false

[tool.setuptools.packages]
find = { namespaces = false }

[tool.setuptools.package-data]
"uvcombine.tests" = [
  "data/*",
  "data/*/*",
]

[tool.pytest.ini_options]
minversion = "3.0"
norecursedirs = [ "build", "docs/_build" ]
doctest_plus = "enabled"
filterwarnings = [
    "error::ResourceWarning",
    "error::DeprecationWarning",
    # Triggered in uvcombine as a DeprecationWarning or with newer Python as a SyntaxWarning
    "ignore:invalid escape sequence",
]

[tool.coverage.run]
omit = [
  "uvcombine/__init__*",
  "uvcombine/conftest.py",
  "uvcombine/*setup*",
  "uvcombine/*/tests/*",
  "uvcombine/tests/test_*",
  "uvcombine/extern/*",
  "uvcombine/utils/compat/*",
  "uvcombine/version*",
  "uvcombine/wcs/docstrings*",
  "uvcombine/_erfa/*",
  "*/uvcombine/__init__*",
  "*/uvcombine/conftest.py",
  "*/uvcombine/*setup*",
  "*/uvcombine/*/tests/*",
  "*/uvcombine/tests/test_*",
  "*/uvcombine/extern/*",
  "*/uvcombine/utils/compat/*",
  "*/uvcombine/version*",
  "*/uvcombine/wcs/docstrings*",
  "*/uvcombine/_erfa/*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  'def main\(.*\):',
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
]

[tool.upload_docs]
upload-dir = "docs/_build/html"
show-response = "1"
